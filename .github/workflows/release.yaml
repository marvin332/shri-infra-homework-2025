name: Release

on:
  workflow_dispatch:

jobs:
#  lint-and-test:
#    runs-on: self-hosted
#    steps:
#      - uses: actions/checkout@v3
#      - run: npm ci
#      - run: npm run lint
#      - run: npm test

  release:
#    needs: lint-and-test
    runs-on: self-hosted
    env:
      VERSION: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      - name: Determine previous tag & commits
        id: prev
        run: |
          if git tag | grep . >/dev/null; then
            PREV_TAG=$(git describe --tags --abbrev=0)
            COMMITS=$(git log ${PREV_TAG}..HEAD --pretty=format:'- %s')
          else
            PREV_TAG=""
            COMMITS=$(git log --pretty=format:'- %s')
          fi
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS"      >> $GITHUB_ENV
          echo "EOF"           >> $GITHUB_ENV

      - name: Create release branch
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b releases/${VERSION}
          git push origin releases/${VERSION}

     
      

      - name: Build & Push Docker images
        run: |
          echo $REGISTRY_ID
          docker build -t ${REGISTRY_ID}/app:${VERSION} .
          docker tag ${REGISTRY_ID}/app:${VERSION} \
                     ${REGISTRY_ID}/app:${VERSION}_latest
          docker push ${REGISTRY_ID}/app:${VERSION}
          docker push ${REGISTRY_ID}/app:${VERSION}_latest

      - name: Create git tag
        run: |
          git tag -a "${VERSION}" -m "Release ${VERSION}"
          git push origin "${VERSION}"

      - name: Update CHANGELOG.md
        run: |
          DATE=$(date -u +"%Y-%m-%d")
          { echo "## ${VERSION} - ${DATE}"; echo ""; echo "${COMMITS}"; echo ""; cat CHANGELOG.md; } \
            > CHANGELOG.tmp
          mv CHANGELOG.tmp CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for release ${VERSION}"
          git push origin releases/${VERSION}

      - name: Create Release Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = process.env.VERSION;
            const date    = new Date().toISOString().split('T')[0];
            const author  = context.actor;
            const prev    = process.env.PREV_TAG;
            const commits = process.env.COMMITS;
            const image   = `cr.yandex/${process.env.REGISTRY_ID}/app:${version}`;

            await github.issues.create({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              title: `Release ${version} deployed`,
              body: `**Date:** ${date}
              **Author:** @${author}
              **Version:** ${version}
  
              **Commits since ${prev || 'start'}:**
              ${commits}
  
              **Docker image:** ${image}`
              });
